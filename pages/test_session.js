import Head from "next/head";
import styles from "../styles/Home.module.css";
import { getSession } from "../lib/get-session.js";

export default function Home(props) {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>TEST SESSION</h1>
    </div>
  );
}

export async function getServerSideProps({ req, res }) {
  const session = await getSession(req, res);

  // add new fields
  session.views = session.views ? session.views + 1 : 1;

  // ! touch session to extend the expiry by maxAge
  // but it seems the cookie expiery never changes on the browser
  // on another note, redis takes the expiery of the session based on the expiery of the cookie
  // https://github.com/tj/connect-redis#ttl
  setInterval(() => {
    session.touch();
    console.log("INTERVAL: ", { expires: session.cookie.expires });
  }, 59000);

  return {
    props: {
      views: session.views,
    },
  };
}
